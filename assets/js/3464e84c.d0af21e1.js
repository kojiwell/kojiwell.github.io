"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4824],{8397:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=s(4848),t=s(8453);const i={id:"slurm",title:"Slurm",sidebar_label:"Slurm"},l=void 0,o={id:"special/slurm",title:"Slurm",description:"Slurm is a free and open-source job scheduler for large and small Linux clusters. It is robust, fault-tolerant, and highly scalable, used by",source:"@site/docs/special/slurm.md",sourceDirName:"special",slug:"/special/slurm",permalink:"/docs/special/slurm",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/special/slurm.md",tags:[],version:"current",frontMatter:{id:"slurm",title:"Slurm",sidebar_label:"Slurm"},sidebar:"notesSidebar",previous:{title:"iDRAC",permalink:"/docs/special/idrac"}},a={},c=[{value:"Unsorted notes",id:"unsorted-notes",level:2}];function d(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Slurm is a free and open-source job scheduler for large and small Linux clusters. It is robust, fault-tolerant, and highly scalable, used by\nmany of supercomputers in the world."}),"\n",(0,r.jsx)(n.h2,{id:"unsorted-notes",children:"Unsorted notes"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"List drained/draining/down nodes with the reasons"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'sinfo -R -o "%n %E"\n'})}),"\n",(0,r.jsx)(n.p,{children:"List down and drained nodes and run something via pdsh"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Put the list in DNODES variable\nDNODES=$(sinfo -R -t drained,down -o \"%n\" -h |sort |awk '{print $1}' ORS=\",\"|sed 's/.$//')\n\n# e.g. Check nodes by testinfra\npdsh -w $DNODES py.test -v test_myinfra.py\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Parse hostnames from slurm's host list expression"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"# Command\nscontrol show hostname j-[001-004,010,123]\n\n# Output\nj-001\nj-002\nj-003\nj-004\nj-010\nj-123\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Obtain one particular node exclusively"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"salloc -p <partition> -w <node> --exclusive -J <job> -t <walltime> --no-shell --no-kill\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Update the limits of a user"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"# Cores\nsacctmgr --immediate modify user where name=kojiwell partition=short set GrpCpus=128\n \n# Walltime\nsacctmgr --immediate modify user where name=kojiwell partition=short set MaxWall=12:00:00\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Create a maintenance reservation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"scontrol create reservation starttime=2020-12-22T08:00:00 \\\n   duration=infinite user=root,kojiwell flags=maint,ignore_jobs nodes=ALL\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The date format is ",(0,r.jsx)(n.code,{children:"2020-12-22T08:00:00"})]}),"\n",(0,r.jsx)(n.li,{children:'The "ignore_jobs" flag is used to indicate that we can ignore currently running jobs\nwhen creating this reservation. By default, only resources which are not expected to\nhave a running job at the start time can be reserved (the time limit of all running\njobs will have been reached). In this case we can manually cancel the running jobs as\nneeded to perform system maintenance.'}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["Example of logrotate config for Slurm -- ",(0,r.jsx)(n.code,{children:"/etc/logrotate.d/slurm"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"##\n# Slurm Logrotate Configuration\n##\n/var/log/slurm/*.log {\n        compress\n        missingok\n        nocopytruncate\n        nodelaycompress\n        nomail\n        notifempty\n        noolddir\n        rotate 5\n        sharedscripts\n        size=5M\n        create 640 slurm root\n        postrotate\n                pkill -x --signal SIGUSR2 slurmctld\n                pkill -x --signal SIGUSR2 slurmd\n                pkill -x --signal SIGUSR2 slurmdbd\n                exit 0\n        endscript\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);